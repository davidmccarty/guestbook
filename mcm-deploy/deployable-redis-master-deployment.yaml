apiVersion: core.hybridapp.io/v1alpha1
kind: Deployable
metadata:
  name: deployment-guestbook-redis-master
  namespace: guestbook
  generation: 1
  labels:
    application: guestbook
    version: 1.0.0
spec:
  hybridtemplates:
    - deployerType: kubernetes
      template:
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: redis-master
          namespace: guestbook
          labels:
            app: redis
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 10
          selector:
            matchLabels:
              app: redis
              role: master
              tier: backend
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              labels:
                app: redis
                role: master
                tier: backend
            spec:
              containers:
                - name: master
                  image: 'k8s.gcr.io/redis:e2e'
                  imagePullPolicy: IfNotPresent
                  ports:
                    - containerPort: 6379
                      protocol: TCP
                  resources:
                    requests:
                      cpu: 100m
                      memory: 100Mi
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
              dnsPolicy: ClusterFirst
              restartPolicy: Always
              schedulerName: default-scheduler
              securityContext: {}
              terminationGracePeriodSeconds: 30
  placement:
    deployers:
      - namespace: guestbook